plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5' apply false
    id 'io.spring.dependency-management' version '1.1.3' apply false
}

ext {
    set('springCloudVersion', "2022.0.4")
}

allprojects {
    group = 'stock'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.kafka:spring-kafka'
        implementation 'com.mysql:mysql-connector-j'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'redis.clients:jedis'
        
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
        testImplementation 'org.awaitility:awaitility:4.2.0'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.mockito:mockito-junit-jupiter'
        testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
        testImplementation 'org.testcontainers:kafka:1.17.6'
        
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }

    task integrationTest(type: Test) {
        useJUnitPlatform()
        include '**/IntegrationTest*'
        systemProperty 'spring.profiles.active', 'test'
    }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    def allTestClassesDirs = project.subprojects.collect { it.sourceSets.test.output.classesDirs }.flatten()
    testClassesDirs = files(allTestClassesDirs)

    def allRuntimeClasspaths = project.subprojects.collect { it.sourceSets.test.runtimeClasspath }.flatten()
    classpath = files(allRuntimeClasspaths)

    useJUnitPlatform()
    include '**/IntegrationTest*'
    systemProperty 'spring.profiles.active', 'test'
}