user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Auth request for checking login status
        location = /auth {
            internal;
            proxy_pass https://api-gateway:8081/api/auth/check;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
        }

        location /api/ {
            # OPTIONS 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # 인증이 필요 없는 엔드포인트
            location ~ ^/api/(auth/register|auth/login|auth/verify) {
                proxy_pass https://api-gateway:8081;
                proxy_ssl_verify off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Cookie $http_cookie;
            }

            # 인증이 필요한 엔드포인트
            location /api/ {
                auth_request /auth;
                auth_request_set $auth_status $upstream_status;

                if ($auth_status = 401) {
                    return 302 https://localhost:3001/login;
                }

                proxy_pass https://api-gateway:8081;
                proxy_ssl_verify off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Cookie $http_cookie;
            }
        }

        location /actuator/ {
            proxy_pass https://api-gateway:8081;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /uploads/ {
            alias /app/uploads/;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }

        location /ws {
            proxy_pass http://localhost:8084;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }
    }

    server {
        listen 3001 ssl http2;
        server_name localhost;
        
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        root /usr/share/nginx/html/user;

        # 인증이 필요 없는 엔드포인트
        location ~ ^/api/(auth/register|auth/login|auth/verify) {
            proxy_pass https://api-gateway:8081;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header Origin $http_origin;

            # CORS preflight 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location / {
            try_files $uri $uri/ @api;
        }

        location @api {
            rewrite ^/(?!api/)(.*)$ /api/auth/$1 break;
            proxy_pass https://api-gateway:8081;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
            proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
            proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;

            access_log /var/log/nginx/api_access.log;
            error_log /var/log/nginx/api_error.log debug;

            # CORS preflight 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }
    }

    server {
        listen 3002 ssl http2;
        server_name localhost;
        
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        root /usr/share/nginx/html/stock;

        location / {
            try_files $uri $uri/ @api;
        }

        location @api {
            rewrite ^/(?!api/)(.*)$ /api/stock/$1 break;
            proxy_pass https://api-gateway:8081;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
            proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
            proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }
    }

    server {
        listen 3003 ssl http2;
        server_name localhost;
        
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        root /usr/share/nginx/html/social;

        location / {
            try_files $uri $uri/ @api;
        }

        location @api {
            rewrite ^/(?!api/)(.*)$ /api/social/$1 break;
            proxy_pass https://api-gateway:8081;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
            proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
            proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }
    }

    server {
        listen 3004 ssl http2;
        server_name localhost;
        
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        root /usr/share/nginx/html/newsfeed;

        location / {
            try_files $uri $uri/ @api;
        }

        location @api {
            rewrite ^/(?!api/)(.*)$ /api/newsfeed/$1 break;
            proxy_pass https://api-gateway:8081;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Origin $http_origin;
            proxy_set_header Access-Control-Request-Method $http_access_control_request_method;
            proxy_set_header Access-Control-Request-Headers $http_access_control_request_headers;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
            return 204;
        }
    }
}